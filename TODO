API:
- [ ] POST /articles: This endpoint allows to create an Article in our in-memory database (H2) using Spring JPA. An Article is described by his ID, name, price, and picture. You have the full control to define type of each attribute.
- [ ] GET  /articles/{id}: This endpoint allows to fetch an article by ID from the database and return an ArticleDTO as JSON. If the article is not found, you need to return 400 http response.
- [ ] GET  /articles: This endpoint allows to fetch all existing Articles in the database, it should return a List<ArticleDTO> as JSON, if the database is empty return empty array.
- [ ] GET  /orders: This endpoint allows to fetch all existing Orders from the database, it should return a List<OrderDto>, if the database is empty return empty array.
- [ ] POST /orders: this endpoint allows to create an order, an order is described by his ID, Reference (random alphanumeric string), List<Article>, date.
- [ ] PUT  /orders/{id}: this endpoint allows to edit articles (remove/add new article) of an order, if the order is not found you need to return 400 http response.

FRONT END:
- [ ]